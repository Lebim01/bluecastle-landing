/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeaderLogoSize".
 */
export type HeaderLogoSize = ('sm' | 'md' | 'lg' | 'xl') | null;
/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    pages: Page;
    categories: Category;
    posts: Post;
    media: Media;
    contacts: Contact;
    redirects: Redirect;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    contacts: ContactsSelect<false> | ContactsSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
    'site-settings': SiteSetting;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    'site-settings': SiteSettingsSelect<false> | SiteSettingsSelect<true>;
  };
  locale: 'es' | 'en' | 'pt';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  layout: (
    | CallToActionBlock
    | ContentBlock
    | MediaBlock
    | SectionBlock
    | {
        /**
         * Agrega, elimina o reordena logos libremente.
         */
        items?:
          | {
              media: number | Media;
              alt: string;
              /**
               * Se abrirá al hacer clic en el logo.
               */
              href?: string | null;
              newTab?: boolean | null;
              id?: string | null;
            }[]
          | null;
        /**
         * Altura en píxeles (px).
         */
        height?: number | null;
        /**
         * Cuántos logos se muestran según el tamaño de pantalla.
         */
        perView?: {
          /**
           * < 640px
           */
          base?: number | null;
          sm?: number | null;
          md?: number | null;
          lg?: number | null;
          xl?: number | null;
        };
        autoScroll?: {
          playOnInit?: boolean | null;
          /**
           * 1 = normal. Ajusta entre 0.25 y 5.
           */
          speed?: number | null;
          stopOnMouseEnter?: boolean | null;
          stopOnInteraction?: boolean | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'carousel';
      }
    | {
        /**
         * Elige el estilo visual del hero
         */
        variant: 'waves' | 'aurora' | 'carousel' | 'stacked';
        title?: string | null;
        subcopy?: string | null;
        cta?: {
          label?: string | null;
          href?: string | null;
        };
        disclaimer?: string | null;
        logo?: (number | null) | Media;
        /**
         * Configura el degradado y la altura del hero
         */
        waves?: {
          gradientStart?: string | null;
          gradientEnd?: string | null;
          heightVH?: number | null;
        };
        /**
         * Configura colores, cantidad y velocidad de estrellas
         */
        aurora?: {
          colors?:
            | {
                color?: string | null;
                id?: string | null;
              }[]
            | null;
          starsCount?: number | null;
          starsSpeed?: number | null;
        };
        /**
         * Hero tipo carrusel (Embla) con slides configurables
         */
        carousel?: {
          heightVH?: number | null;
          loop?: boolean | null;
          autoplayMs?: number | null;
          slides: {
            image: number | Media;
            title?: string | null;
            text?: string | null;
            cta?: {
              label?: string | null;
              href?: string | null;
            };
            overlayFrom?: string | null;
            overlayTo?: string | null;
            align?: ('start' | 'center' | 'end') | null;
            lightText?: boolean | null;
            id?: string | null;
          }[];
        };
        /**
         * Hero con múltiples capas de fondo y layout izquierda/centrado.
         */
        stacked?: {
          height?: ('twoThirds' | 'full' | 'auto') | null;
          layout?: ('left' | 'center') | null;
          container?: ('lg' | 'xl' | '2xl' | 'full') | null;
          pattern?: {
            show?: boolean | null;
            image?: (number | null) | Media;
            size?: ('auto' | 'contain' | 'cover') | null;
            position?: string | null;
            repeat?: ('repeat' | 'no-repeat') | null;
          };
          overlay?: {
            show?: boolean | null;
            from?: string | null;
            to?: string | null;
            direction?: string | null;
          };
          bgImage?: {
            show?: boolean | null;
            image?: (number | null) | Media;
            fit?: ('cover' | 'contain') | null;
            position?: string | null;
          };
          baseGradient?: {
            show?: boolean | null;
            from?: string | null;
            to?: string | null;
            direction?: string | null;
          };
          sideImage?: {
            image?: (number | null) | Media;
            alt?: string | null;
            width?: ('md' | 'lg') | null;
            disableOnMobile?: boolean | null;
          };
          animate?: {
            enable?: boolean | null;
            delayMs?: number | null;
            durationMs?: number | null;
          };
          baseColor?: {
            show?: boolean | null;
            color?: string | null;
          };
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'heroBlock';
      }
    | {
        title?: string | null;
        items?:
          | {
              question: string;
              answer: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'faq';
      }
    | {
        title?: string | null;
        displayStyle: 'grid' | 'circle' | 'carousel';
        /**
         * Número de columnas en pantallas grandes para grid/circles.
         */
        columns?: number | null;
        showDots?: boolean | null;
        showArrows?: boolean | null;
        items?:
          | {
              name: string;
              country?: string | null;
              videoUrl?: string | null;
              quote?: string | null;
              avatarUrl?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'testimonials';
      }
    | {
        /**
         * Pega el bloque completo que te da TradingView (incluye <script> y el contenedor).
         */
        embedHtml: string;
        height?: number | null;
        fullWidth?: boolean | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'tradingView';
      }
    | {
        id?: string | null;
        blockName?: string | null;
        blockType: 'calculator';
      }
    | {
        heading?: string | null;
        subheading?: string | null;
        items?:
          | {
              title: string;
              description?: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              } | null;
              checklist?:
                | {
                    text: string;
                    id?: string | null;
                  }[]
                | null;
              gallery?:
                | {
                    image: number | Media;
                    alt?: string | null;
                    id?: string | null;
                  }[]
                | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'timeline';
      }
    | {
        heading?: string | null;
        variant?: ('cards' | 'list') | null;
        limit?: number | null;
        columns?: number | null;
        filters?: {
          search?: string | null;
          categories?: (number | Category)[] | null;
          excludeIDs?: (string | Post)[] | null;
          sort?: ('-publishedAt' | 'publishedAt' | 'title' | '-title') | null;
        };
        show?: {
          showImage?: boolean | null;
          showCategories?: boolean | null;
          showDate?: boolean | null;
          showAuthor?: boolean | null;
          showExcerpt?: boolean | null;
          showPaginationLink?: boolean | null;
        };
        advanced?: {
          manualItems?: (string | Post)[] | null;
          cardAspect?: ('16/9' | '4/3' | '1/1') | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'blogPostsList';
      }
    | {
        outletName: string;
        headline: string;
        summary?: string | null;
        date?: string | null;
        logo?: (number | null) | Media;
        link: {
          url: string;
          label?: string | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'newsroomMention';
      }
    | {
        heading?: string | null;
        subheading?: string | null;
        groups?:
          | {
              title: string;
              theme?: ('indigo' | 'emerald' | 'sky' | 'amber' | 'rose' | 'slate') | null;
              description?: string | null;
              /**
               * En mobile es 1 columna; aquí defines md+.
               */
              columns?: ('2' | '3' | '4') | null;
              plans?:
                | {
                    title: string;
                    tagline?: string | null;
                    badge?: string | null;
                    image?: (number | null) | Media;
                    features?:
                      | {
                          field: string;
                          value: string;
                          id?: string | null;
                        }[]
                      | null;
                    ctaLabel?: string | null;
                    ctaUrl?: string | null;
                    /**
                     * Si no eliges, usará el tema del grupo.
                     */
                    accentTheme?: ('indigo' | 'emerald' | 'sky' | 'amber' | 'rose' | 'slate') | null;
                    id?: string | null;
                  }[]
                | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'subscriptions';
      }
    | {
        asContainer?: boolean | null;
        maxWidth?: ('lg' | 'xl' | '2xl' | '7xl' | 'full') | null;
        background?: ('transparent' | 'white' | 'neutral-900' | 'zinc-50' | 'panel') | null;
        paddingY?: ('' | 'py-6 md:py-8' | 'py-8 md:py-12' | 'py-12 md:py-16' | 'py-16 md:py-24') | null;
        gap?: ('gap-0' | 'gap-3 md:gap-4' | 'gap-4 md:gap-6' | 'gap-6 md:gap-8' | 'gap-8 md:gap-12') | null;
        alignY?: ('items-start' | 'items-center' | 'items-end' | 'items-stretch') | null;
        alignX?: ('justify-start' | 'justify-center' | 'justify-end' | 'justify-between') | null;
        /**
         * Define cuántas columnas tiene la grilla
         */
        cols?: {
          base?: number | null;
          sm?: number | null;
          md?: number | null;
          lg?: number | null;
          xl?: number | null;
        };
        cells?:
          | {
              blocks: (
                | {
                    outletName: string;
                    headline: string;
                    summary?: string | null;
                    date?: string | null;
                    logo?: (number | null) | Media;
                    link: {
                      url: string;
                      label?: string | null;
                    };
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'newsroomMention';
                  }
                | {
                    content: {
                      root: {
                        type: string;
                        children: {
                          type: string;
                          version: number;
                          [k: string]: unknown;
                        }[];
                        direction: ('ltr' | 'rtl') | null;
                        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                        indent: number;
                        version: number;
                      };
                      [k: string]: unknown;
                    };
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'richText';
                  }
                | {
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'contactForm';
                  }
              )[];
              vAlign?: ('self-stretch' | 'self-start' | 'self-center' | 'self-end') | null;
              base?: number | null;
              sm?: number | null;
              md?: number | null;
              lg?: number | null;
              xl?: number | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'row';
      }
  )[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: FooterNavItem;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FooterNavItem".
 */
export interface FooterNavItem {
  type?: ('reference' | 'custom') | null;
  newTab?: boolean | null;
  reference?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null);
  url?: string | null;
  label: string;
  /**
   * Choose how the link should be rendered.
   */
  appearance?: ('default' | 'outline') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  status?: ('draft' | 'published') | null;
  title: string;
  /**
   * URL del post
   */
  slug?: string | null;
  publishedAt?: string | null;
  author?: (number | null) | User;
  categories?: (number | Category)[] | null;
  coverImage?: (number | null) | Media;
  /**
   * Resumen corto para listados y meta.
   */
  excerpt?: string | null;
  richText: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  seo?: {
    metaTitle?: string | null;
    metaDescription?: string | null;
    ogImage?: (number | null) | Media;
    noIndex?: boolean | null;
    keywords?: string | null;
  };
  tags?:
    | {
        value: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Minutos (opcional, puede calcularse automáticamente).
   */
  readingTime?: number | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  /**
   * Agrega una o más columnas y configura su contenido y estilo
   */
  columns?:
    | {
        /**
         * Porcentaje del ancho total que ocupa esta columna
         */
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: FooterNavItem;
        /**
         * Fondo y estilo del contenedor de esta columna
         */
        surface?: {
          bgColor?: ('transparent' | 'white' | 'black' | 'slate-50' | 'slate-100' | 'slate-900') | null;
          rounded?: ('none' | 'md' | 'lg' | 'xl' | '2xl' | 'full') | null;
          shadow?: boolean | null;
        };
        /**
         * Activa para colocar una imagen o URL como fondo de esta columna
         */
        bgImage?: {
          enabled?: boolean | null;
          image?: (number | null) | Media;
          /**
           * Tiene prioridad sobre “Imagen subida”. Ej: https://.../imagen.jpg
           */
          externalUrl?: string | null;
          size?: ('cover' | 'contain' | 'original') | null;
          position?:
            | (
                | 'top'
                | 'center'
                | 'bottom'
                | 'left'
                | 'right'
                | 'top-left'
                | 'top-right'
                | 'bottom-left'
                | 'bottom-right'
              )
            | null;
          /**
           * 0–100 (porcentaje)
           */
          opacity?: number | null;
        };
        height?: ('auto' | 'sm' | 'md' | 'lg' | 'xl' | 'screen' | 'full' | 'custom') | null;
        /**
         * Se aplica cuando “Alto” = Personalizada (px)
         */
        customHeightPx?: number | null;
        paddingY?: ('none' | 'sm' | 'md' | 'lg' | 'xl') | null;
        /**
         * Agrega bloques de texto, multimedia o llamados a la acción
         */
        elements?:
          | (
              | {
                  content: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  align?: ('start' | 'center' | 'end') | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'text';
                }
              | {
                  media?: (number | null) | Media;
                  /**
                   * URL directa de imagen o video (opcional)
                   */
                  externalUrl?: string | null;
                  rounded?: ('none' | 'md' | 'lg' | 'xl' | '2xl' | 'full') | null;
                  aspect?: ('auto' | '16/9' | '4/3' | '1/1') | null;
                  objectFit?: ('cover' | 'contain') | null;
                  shadow?: boolean | null;
                  /**
                   * Se aplican cuando el archivo o URL es un video
                   */
                  videoOptions?: {
                    showOverlayControl?: boolean | null;
                    autoplay?: boolean | null;
                    muted?: boolean | null;
                    loop?: boolean | null;
                    poster?: string | null;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'media';
                }
              | {
                  label: string;
                  link: FooterNavItem;
                  variant?: ('primary' | 'secondary' | 'link') | null;
                  align?: ('start' | 'center' | 'end') | null;
                  fullWidth?: boolean | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'cta';
                }
            )[]
          | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SectionBlock".
 */
export interface SectionBlock {
  container?: ('sm' | 'md' | 'lg' | 'xl' | '2xl' | 'full') | null;
  paddingY?: ('none' | 'sm' | 'md' | 'lg' | 'xl') | null;
  height?: ('auto' | 'half' | 'screen' | 'custom') | null;
  customHeight?: number | null;
  background?: ('default' | 'muted' | 'brand' | 'dark' | 'image' | 'imageUrl' | 'video') | null;
  bgImage?: (number | null) | Media;
  bgImageUrl?: string | null;
  imageOverlay?: {
    show?: boolean | null;
    color?: string | null;
    opacity?: number | null;
  };
  video?: {
    sourceType?: ('upload' | 'external') | null;
    file?: (number | null) | Media;
    url?: string | null;
    poster?: (number | null) | Media;
    fit?: ('cover' | 'contain') | null;
    autoplay?: boolean | null;
    muted?: boolean | null;
    loop?: boolean | null;
    playsInline?: boolean | null;
    disableOnMobile?: boolean | null;
    overlay?: {
      show?: boolean | null;
      color?: string | null;
      opacity?: number | null;
    };
  };
  id?: string | null;
  content: (
    | CallToActionBlock
    | ContentBlock
    | MediaBlock
    | {
        heading?: string | null;
        variant?: ('cards' | 'list') | null;
        limit?: number | null;
        columns?: number | null;
        filters?: {
          search?: string | null;
          categories?: (number | Category)[] | null;
          excludeIDs?: (string | Post)[] | null;
          sort?: ('-publishedAt' | 'publishedAt' | 'title' | '-title') | null;
        };
        show?: {
          showImage?: boolean | null;
          showCategories?: boolean | null;
          showDate?: boolean | null;
          showAuthor?: boolean | null;
          showExcerpt?: boolean | null;
          showPaginationLink?: boolean | null;
        };
        advanced?: {
          manualItems?: (string | Post)[] | null;
          cardAspect?: ('16/9' | '4/3' | '1/1') | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'blogPostsList';
      }
    | {
        asContainer?: boolean | null;
        maxWidth?: ('lg' | 'xl' | '2xl' | '7xl' | 'full') | null;
        background?: ('transparent' | 'white' | 'neutral-900' | 'zinc-50' | 'panel') | null;
        paddingY?: ('' | 'py-6 md:py-8' | 'py-8 md:py-12' | 'py-12 md:py-16' | 'py-16 md:py-24') | null;
        gap?: ('gap-0' | 'gap-3 md:gap-4' | 'gap-4 md:gap-6' | 'gap-6 md:gap-8' | 'gap-8 md:gap-12') | null;
        alignY?: ('items-start' | 'items-center' | 'items-end' | 'items-stretch') | null;
        alignX?: ('justify-start' | 'justify-center' | 'justify-end' | 'justify-between') | null;
        /**
         * Define cuántas columnas tiene la grilla
         */
        cols?: {
          base?: number | null;
          sm?: number | null;
          md?: number | null;
          lg?: number | null;
          xl?: number | null;
        };
        cells?:
          | {
              blocks: (
                | {
                    outletName: string;
                    headline: string;
                    summary?: string | null;
                    date?: string | null;
                    logo?: (number | null) | Media;
                    link: {
                      url: string;
                      label?: string | null;
                    };
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'newsroomMention';
                  }
                | {
                    content: {
                      root: {
                        type: string;
                        children: {
                          type: string;
                          version: number;
                          [k: string]: unknown;
                        }[];
                        direction: ('ltr' | 'rtl') | null;
                        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                        indent: number;
                        version: number;
                      };
                      [k: string]: unknown;
                    };
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'richText';
                  }
                | {
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'contactForm';
                  }
              )[];
              vAlign?: ('self-stretch' | 'self-start' | 'self-center' | 'self-end') | null;
              base?: number | null;
              sm?: number | null;
              md?: number | null;
              lg?: number | null;
              xl?: number | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'row';
      }
  )[];
  blockName?: string | null;
  blockType: 'section';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contacts".
 */
export interface Contact {
  id: number;
  name: string;
  last_name: string;
  email: string;
  phone?: string | null;
  message: string;
  source?: string | null;
  utm?: {
    campaign?: string | null;
    source?: string | null;
    medium?: string | null;
    term?: string | null;
    content?: string | null;
  };
  _hp?: string | null;
  consent: boolean;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc:
    | {
        relationTo: 'posts';
        value: string | Post;
      }
    | {
        relationTo: 'pages';
        value: number | Page;
      };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        categoryID?: string | null;
        title?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'contacts';
        value: number | Contact;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        section?: T | SectionBlockSelect<T>;
        carousel?:
          | T
          | {
              items?:
                | T
                | {
                    media?: T;
                    alt?: T;
                    href?: T;
                    newTab?: T;
                    id?: T;
                  };
              height?: T;
              perView?:
                | T
                | {
                    base?: T;
                    sm?: T;
                    md?: T;
                    lg?: T;
                    xl?: T;
                  };
              autoScroll?:
                | T
                | {
                    playOnInit?: T;
                    speed?: T;
                    stopOnMouseEnter?: T;
                    stopOnInteraction?: T;
                  };
              id?: T;
              blockName?: T;
            };
        heroBlock?:
          | T
          | {
              variant?: T;
              title?: T;
              subcopy?: T;
              cta?:
                | T
                | {
                    label?: T;
                    href?: T;
                  };
              disclaimer?: T;
              logo?: T;
              waves?:
                | T
                | {
                    gradientStart?: T;
                    gradientEnd?: T;
                    heightVH?: T;
                  };
              aurora?:
                | T
                | {
                    colors?:
                      | T
                      | {
                          color?: T;
                          id?: T;
                        };
                    starsCount?: T;
                    starsSpeed?: T;
                  };
              carousel?:
                | T
                | {
                    heightVH?: T;
                    loop?: T;
                    autoplayMs?: T;
                    slides?:
                      | T
                      | {
                          image?: T;
                          title?: T;
                          text?: T;
                          cta?:
                            | T
                            | {
                                label?: T;
                                href?: T;
                              };
                          overlayFrom?: T;
                          overlayTo?: T;
                          align?: T;
                          lightText?: T;
                          id?: T;
                        };
                  };
              stacked?:
                | T
                | {
                    height?: T;
                    layout?: T;
                    container?: T;
                    pattern?:
                      | T
                      | {
                          show?: T;
                          image?: T;
                          size?: T;
                          position?: T;
                          repeat?: T;
                        };
                    overlay?:
                      | T
                      | {
                          show?: T;
                          from?: T;
                          to?: T;
                          direction?: T;
                        };
                    bgImage?:
                      | T
                      | {
                          show?: T;
                          image?: T;
                          fit?: T;
                          position?: T;
                        };
                    baseGradient?:
                      | T
                      | {
                          show?: T;
                          from?: T;
                          to?: T;
                          direction?: T;
                        };
                    sideImage?:
                      | T
                      | {
                          image?: T;
                          alt?: T;
                          width?: T;
                          disableOnMobile?: T;
                        };
                    animate?:
                      | T
                      | {
                          enable?: T;
                          delayMs?: T;
                          durationMs?: T;
                        };
                    baseColor?:
                      | T
                      | {
                          show?: T;
                          color?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        faq?:
          | T
          | {
              title?: T;
              items?:
                | T
                | {
                    question?: T;
                    answer?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        testimonials?:
          | T
          | {
              title?: T;
              displayStyle?: T;
              columns?: T;
              showDots?: T;
              showArrows?: T;
              items?:
                | T
                | {
                    name?: T;
                    country?: T;
                    videoUrl?: T;
                    quote?: T;
                    avatarUrl?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        tradingView?:
          | T
          | {
              embedHtml?: T;
              height?: T;
              fullWidth?: T;
              id?: T;
              blockName?: T;
            };
        calculator?:
          | T
          | {
              id?: T;
              blockName?: T;
            };
        timeline?:
          | T
          | {
              heading?: T;
              subheading?: T;
              items?:
                | T
                | {
                    title?: T;
                    description?: T;
                    checklist?:
                      | T
                      | {
                          text?: T;
                          id?: T;
                        };
                    gallery?:
                      | T
                      | {
                          image?: T;
                          alt?: T;
                          id?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        blogPostsList?:
          | T
          | {
              heading?: T;
              variant?: T;
              limit?: T;
              columns?: T;
              filters?:
                | T
                | {
                    search?: T;
                    categories?: T;
                    excludeIDs?: T;
                    sort?: T;
                  };
              show?:
                | T
                | {
                    showImage?: T;
                    showCategories?: T;
                    showDate?: T;
                    showAuthor?: T;
                    showExcerpt?: T;
                    showPaginationLink?: T;
                  };
              advanced?:
                | T
                | {
                    manualItems?: T;
                    cardAspect?: T;
                  };
              id?: T;
              blockName?: T;
            };
        newsroomMention?:
          | T
          | {
              outletName?: T;
              headline?: T;
              summary?: T;
              date?: T;
              logo?: T;
              link?:
                | T
                | {
                    url?: T;
                    label?: T;
                  };
              id?: T;
              blockName?: T;
            };
        subscriptions?:
          | T
          | {
              heading?: T;
              subheading?: T;
              groups?:
                | T
                | {
                    title?: T;
                    theme?: T;
                    description?: T;
                    columns?: T;
                    plans?:
                      | T
                      | {
                          title?: T;
                          tagline?: T;
                          badge?: T;
                          image?: T;
                          features?:
                            | T
                            | {
                                field?: T;
                                value?: T;
                                id?: T;
                              };
                          ctaLabel?: T;
                          ctaUrl?: T;
                          accentTheme?: T;
                          id?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        row?:
          | T
          | {
              asContainer?: T;
              maxWidth?: T;
              background?: T;
              paddingY?: T;
              gap?: T;
              alignY?: T;
              alignX?: T;
              cols?:
                | T
                | {
                    base?: T;
                    sm?: T;
                    md?: T;
                    lg?: T;
                    xl?: T;
                  };
              cells?:
                | T
                | {
                    blocks?:
                      | T
                      | {
                          newsroomMention?:
                            | T
                            | {
                                outletName?: T;
                                headline?: T;
                                summary?: T;
                                date?: T;
                                logo?: T;
                                link?:
                                  | T
                                  | {
                                      url?: T;
                                      label?: T;
                                    };
                                id?: T;
                                blockName?: T;
                              };
                          richText?:
                            | T
                            | {
                                content?: T;
                                id?: T;
                                blockName?: T;
                              };
                          contactForm?:
                            | T
                            | {
                                id?: T;
                                blockName?: T;
                              };
                        };
                    vAlign?: T;
                    base?: T;
                    sm?: T;
                    md?: T;
                    lg?: T;
                    xl?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?: T | FooterNavItemSelect<T>;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FooterNavItem_select".
 */
export interface FooterNavItemSelect<T extends boolean = true> {
  type?: T;
  newTab?: T;
  reference?: T;
  url?: T;
  label?: T;
  appearance?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?: T | FooterNavItemSelect<T>;
        surface?:
          | T
          | {
              bgColor?: T;
              rounded?: T;
              shadow?: T;
            };
        bgImage?:
          | T
          | {
              enabled?: T;
              image?: T;
              externalUrl?: T;
              size?: T;
              position?: T;
              opacity?: T;
            };
        height?: T;
        customHeightPx?: T;
        paddingY?: T;
        elements?:
          | T
          | {
              text?:
                | T
                | {
                    content?: T;
                    align?: T;
                    id?: T;
                    blockName?: T;
                  };
              media?:
                | T
                | {
                    media?: T;
                    externalUrl?: T;
                    rounded?: T;
                    aspect?: T;
                    objectFit?: T;
                    shadow?: T;
                    videoOptions?:
                      | T
                      | {
                          showOverlayControl?: T;
                          autoplay?: T;
                          muted?: T;
                          loop?: T;
                          poster?: T;
                        };
                    id?: T;
                    blockName?: T;
                  };
              cta?:
                | T
                | {
                    label?: T;
                    link?: T | FooterNavItemSelect<T>;
                    variant?: T;
                    align?: T;
                    fullWidth?: T;
                    id?: T;
                    blockName?: T;
                  };
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SectionBlock_select".
 */
export interface SectionBlockSelect<T extends boolean = true> {
  container?: T;
  paddingY?: T;
  height?: T;
  customHeight?: T;
  background?: T;
  bgImage?: T;
  bgImageUrl?: T;
  imageOverlay?:
    | T
    | {
        show?: T;
        color?: T;
        opacity?: T;
      };
  video?:
    | T
    | {
        sourceType?: T;
        file?: T;
        url?: T;
        poster?: T;
        fit?: T;
        autoplay?: T;
        muted?: T;
        loop?: T;
        playsInline?: T;
        disableOnMobile?: T;
        overlay?:
          | T
          | {
              show?: T;
              color?: T;
              opacity?: T;
            };
      };
  id?: T;
  content?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        blogPostsList?:
          | T
          | {
              heading?: T;
              variant?: T;
              limit?: T;
              columns?: T;
              filters?:
                | T
                | {
                    search?: T;
                    categories?: T;
                    excludeIDs?: T;
                    sort?: T;
                  };
              show?:
                | T
                | {
                    showImage?: T;
                    showCategories?: T;
                    showDate?: T;
                    showAuthor?: T;
                    showExcerpt?: T;
                    showPaginationLink?: T;
                  };
              advanced?:
                | T
                | {
                    manualItems?: T;
                    cardAspect?: T;
                  };
              id?: T;
              blockName?: T;
            };
        row?:
          | T
          | {
              asContainer?: T;
              maxWidth?: T;
              background?: T;
              paddingY?: T;
              gap?: T;
              alignY?: T;
              alignX?: T;
              cols?:
                | T
                | {
                    base?: T;
                    sm?: T;
                    md?: T;
                    lg?: T;
                    xl?: T;
                  };
              cells?:
                | T
                | {
                    blocks?:
                      | T
                      | {
                          newsroomMention?:
                            | T
                            | {
                                outletName?: T;
                                headline?: T;
                                summary?: T;
                                date?: T;
                                logo?: T;
                                link?:
                                  | T
                                  | {
                                      url?: T;
                                      label?: T;
                                    };
                                id?: T;
                                blockName?: T;
                              };
                          richText?:
                            | T
                            | {
                                content?: T;
                                id?: T;
                                blockName?: T;
                              };
                          contactForm?:
                            | T
                            | {
                                id?: T;
                                blockName?: T;
                              };
                        };
                    vAlign?: T;
                    base?: T;
                    sm?: T;
                    md?: T;
                    lg?: T;
                    xl?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  id?: T;
  status?: T;
  title?: T;
  slug?: T;
  publishedAt?: T;
  author?: T;
  categories?: T;
  coverImage?: T;
  excerpt?: T;
  richText?: T;
  seo?:
    | T
    | {
        metaTitle?: T;
        metaDescription?: T;
        ogImage?: T;
        noIndex?: T;
        keywords?: T;
      };
  tags?:
    | T
    | {
        value?: T;
        id?: T;
      };
  readingTime?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contacts_select".
 */
export interface ContactsSelect<T extends boolean = true> {
  name?: T;
  last_name?: T;
  email?: T;
  phone?: T;
  message?: T;
  source?: T;
  utm?:
    | T
    | {
        campaign?: T;
        source?: T;
        medium?: T;
        term?: T;
        content?: T;
      };
  _hp?: T;
  consent?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        categoryID?: T;
        title?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  branding?: {
    /**
     * Define cómo se presentará el logo en el header.
     */
    style?: ('wordmark' | 'isotype' | 'isologo' | 'text') | null;
    size?: HeaderLogoSize;
    logoLight?: (number | null) | Media;
    logoDark?: (number | null) | Media;
    /**
     * Texto alternativo accesible para el logo.
     */
    alt?: string | null;
  };
  sticky?: boolean | null;
  showSearch?: boolean | null;
  /**
   * Agrega ítems de navegación. Usa "Dropdown" o "Mega menú" para menús anidados.
   */
  nav?: HeaderNavItem[] | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeaderNavItem".
 */
export interface HeaderNavItem {
  idKey?: string | null;
  style?: ('link' | 'dropdown') | null;
  visible?: boolean | null;
  link: LinkField;
  children?:
    | {
        link: LinkField;
        id?: string | null;
      }[]
    | null;
  mega?: {
    columns?:
      | {
          title: string;
          items?:
            | {
                link: LinkField;
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
    promo: {
      headline?: string | null;
      subhead?: string | null;
      image?: (number | null) | Media;
      link: LinkField;
    };
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'navItem';
}
/**
 * Enlace interno o externo
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LinkField".
 */
export interface LinkField {
  label: string;
  type: 'internal' | 'external';
  doc?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null);
  url?: string | null;
  newTab?: boolean | null;
  utm?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  brand?: {
    name?: string | null;
    logo?: (number | null) | Media;
    logoAlt?: string | null;
    social?: {
      facebook?: string | null;
      twitter?: string | null;
      instagram?: string | null;
      whatsappPhone?: string | null;
    };
  };
  columns?:
    | {
        title?: string | null;
        items?:
          | {
              link: FooterNavItem;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  address?: string | null;
  legalLeft?: string | null;
  legalRight?: string | null;
  ssl?: {
    badge?: (number | null) | Media;
    badgeAlt?: string | null;
  };
  developedBy: {
    credit: FooterNavItem;
  };
  styles?: {
    background?: string | null;
    textColor?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-settings".
 */
export interface SiteSetting {
  id: number;
  defaultTitle: string;
  favicon: number | Media;
  defaultOgImage?: (number | null) | Media;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  branding?:
    | T
    | {
        style?: T;
        size?: T;
        logoLight?: T;
        logoDark?: T;
        alt?: T;
      };
  sticky?: T;
  showSearch?: T;
  nav?:
    | T
    | {
        navItem?: T | HeaderNavItemSelect<T>;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeaderNavItem_select".
 */
export interface HeaderNavItemSelect<T extends boolean = true> {
  idKey?: T;
  style?: T;
  visible?: T;
  link?: T | LinkFieldSelect<T>;
  children?:
    | T
    | {
        link?: T | LinkFieldSelect<T>;
        id?: T;
      };
  mega?:
    | T
    | {
        columns?:
          | T
          | {
              title?: T;
              items?:
                | T
                | {
                    link?: T | LinkFieldSelect<T>;
                    id?: T;
                  };
              id?: T;
            };
        promo?:
          | T
          | {
              headline?: T;
              subhead?: T;
              image?: T;
              link?: T | LinkFieldSelect<T>;
            };
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LinkField_select".
 */
export interface LinkFieldSelect<T extends boolean = true> {
  label?: T;
  type?: T;
  doc?: T;
  url?: T;
  newTab?: T;
  utm?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  brand?:
    | T
    | {
        name?: T;
        logo?: T;
        logoAlt?: T;
        social?:
          | T
          | {
              facebook?: T;
              twitter?: T;
              instagram?: T;
              whatsappPhone?: T;
            };
      };
  columns?:
    | T
    | {
        title?: T;
        items?:
          | T
          | {
              link?: T | FooterNavItemSelect<T>;
              id?: T;
            };
        id?: T;
      };
  address?: T;
  legalLeft?: T;
  legalRight?: T;
  ssl?:
    | T
    | {
        badge?: T;
        badgeAlt?: T;
      };
  developedBy?:
    | T
    | {
        credit?: T | FooterNavItemSelect<T>;
      };
  styles?:
    | T
    | {
        background?: T;
        textColor?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-settings_select".
 */
export interface SiteSettingsSelect<T extends boolean = true> {
  defaultTitle?: T;
  favicon?: T;
  defaultOgImage?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}